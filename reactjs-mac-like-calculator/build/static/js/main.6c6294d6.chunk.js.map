{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","index.js"],"names":["buttonComponent","props","classes","operation","double","triple","onClick","e","click","label","className","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","eval","n","includes","i","newValue","parseFloat","value","Component","displayComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c6294d6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nconst buttonComponent = props => {\r\n    let classes = 'button'\r\n    classes += props.operation ? ' operation' : ''\r\n    classes += props.double ? ' double' : ''\r\n    classes += props.triple ? ' triple' : ''\r\n    \r\n    return (\r\n        <button onClick={e => props.click && props.click(props.label)}\r\n            className={classes}>\r\n                {props.label}\r\n        </button>\r\n    )\r\n}\r\n    \r\nexport default buttonComponent\r\n","import React, { Component } from 'react'\r\nimport './Calculator.css'\r\n\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n    state = { ...initialState }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.clearMemory = this.clearMemory.bind(this)\r\n        this.setOperation = this.setOperation.bind(this)\r\n        this.addDigit = this.addDigit.bind(this)\r\n    }\r\n\r\n    clearMemory() {\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n    setOperation(operation) {\r\n        if(this.state.current === 0) {\r\n            this.setState({ operation, current: 1, clearDisplay: true })\r\n        } else {\r\n            const equals = operation === '='\r\n            const currentOperation = this.state.operation\r\n            const values = [ ...this.state.values ]\r\n\r\n            try {\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n            } catch(e) {\r\n                values[0] = this.state.values[0]\r\n            }\r\n            \r\n            values[1] = 0\r\n\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n) {\r\n        if(n === '.' && this.state.displayValue.includes('.')) {\r\n            return\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n            || this.state.clearDisplay\r\n\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n\r\n        const displayValue = currentValue + n\r\n\r\n        this.setState({ displayValue, clearDisplay: false })\r\n\r\n        if(n !== '.') {\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [ ...this.state.values ]\r\n            values[i] = newValue\r\n            \r\n            this.setState({ values })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} />\r\n                <Button label=\"AC\" click={this.clearMemory} triple />\r\n                <Button label=\"/\" click={this.setOperation} operation />\r\n                <Button label=\"7\" click={this.addDigit} />\r\n                <Button label=\"8\" click={this.addDigit} />\r\n                <Button label=\"9\" click={this.addDigit} />\r\n                <Button label=\"*\" click={this.setOperation} operation />\r\n                <Button label=\"4\" click={this.addDigit} />\r\n                <Button label=\"5\" click={this.addDigit} />\r\n                <Button label=\"6\" click={this.addDigit} />\r\n                <Button label=\"-\" click={this.setOperation} operation />\r\n                <Button label=\"1\" click={this.addDigit} />\r\n                <Button label=\"2\" click={this.addDigit} />\r\n                <Button label=\"3\" click={this.addDigit} />\r\n                <Button label=\"+\" click={this.setOperation} operation />\r\n                <Button label=\"0\" click={this.addDigit} double />\r\n                <Button label=\".\" click={this.addDigit} />\r\n                <Button label=\"=\" click={this.setOperation} operation />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './Display.css'\r\n\r\nconst displayComponent = props =>\r\n    <div className=\"display\">\r\n        {props.value}\r\n    </div>\r\n\r\nexport default displayComponent\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\n\nReactDOM.render(\n  <div>\n    <h1>Calculator</h1>\n    <Calculator />\n  </div>, \n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}